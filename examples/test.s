# This file was created to see if it is possible to assemble these instructions correctly.

# ../vas -o test.o test.s && ld test.o && objdump -D test.o && readelf -r test.o && readelf -s test.o

.global _start

.section .data, "wa"
msg:
	.string "Hello, world!"

.section .text, "ax"
_start:	
	leaq 1+msg+0-0+0(%rip), %rsi
	leaq 200+msg(%rsp), %rsi
	leaq 2(%rsp), %rcx
	leaq 1(%rax), %rsi
	leaq 270+1(%rax), %rsi
	leaq 1+msg(%rax), %rsi
	leaq 1+msg(%rsp), %rsi
	leaq 300(%rax), %rsi
	leaq msg(%rip), %rax
	leaq 1(%rip), %rsi
	leaq 1+msg(%rbp), %rsi
	leaq 1(%rbp), %rsi
	leaq 300(%rbp), %rsi
	leaq 1+msg+0+1(%rsp), %rsp
	leaq 1+msg(%rsp), %rsp
	leaq 1(%rsp), %rsp
	leaq 0(%rsp), %rsp
	leaq 300(%rsp), %rsp
	leaq 1(%rip), %rax
	leaq 1+msg(%rip), %rax
	leaq 270(%rip), %rax
	leaq 270+msg(%rip), %rax
	leaq 0(%rax), %rsi
	leaq 0(%rip), %rax
	leaq 0(%rip), %rsi
	leaq 0(%rbp), %rsi
	leaq 0(%rsp), %rsp
	leaq 0(%rax), %rsp
	leaq 0(%rdi), %rsp
	leaq 0(%rbp), %rbp
	leaq 0(%rbp), %rsp
	addq 0(%rax), %rsi
	addq 0(%rip), %rax
	addq 0(%rip), %rsi
	addq 0(%rbp), %rsi
	addq 0(%rsp), %rsp
	addq 0(%rax), %rsp
	addq 0(%rdi), %rsp
	addq 0(%rbp), %rbp
	addq 0(%rbp), %rsp
	addq %rax, %rcx
	addq $30, %rdi
	addq 1+msg+0-0+0(%rip), %rsi
	addq 200+msg(%rsp), %rsi
	addq 2(%rsp), %rcx
	addq 1(%rax), %rsi
	addq 270+1(%rax), %rsi
	addq 1+msg(%rax), %rsi
	addq 1+msg(%rsp), %rsi
	addq 300(%rax), %rsi
	addq msg(%rip), %rax
	addq 1(%rip), %rsi
	addq 1+msg(%rbp), %rsi
	addq 1(%rbp), %rsi
	addq 300(%rbp), %rsi
	addq 1+msg+0+1(%rsp), %rsp
	addq 1+msg(%rsp), %rsp
	addq 1(%rsp), %rsp
	addq 0(%rsp), %rsp
	addq 300(%rsp), %rsp
	addq 1(%rip), %rax
	addq 1+msg(%rip), %rax
	addq 270(%rip), %rax
	addq 270+msg(%rip), %rax
	movq 1+msg+0-0+0(%rip), %rsi
	movq 200+msg(%rsp), %rsi
	movq 2(%rsp), %rcx
	movq 1(%rax), %rsi
	movq 270+1(%rax), %rsi
	movq 1+msg(%rax), %rsi
	movq 1+msg(%rsp), %rsi
	movq 300(%rax), %rsi
	movq msg(%rip), %rax
	movq 1(%rip), %rsi
	movq 1+msg(%rbp), %rsi
	movq 1(%rbp), %rsi
	movq 300(%rbp), %rsi
	movq 1+msg+0+1(%rsp), %rsp
	movq 1+msg(%rsp), %rsp
	movq 1(%rsp), %rsp
	movq 0(%rsp), %rsp
	movq 300(%rsp), %rsp
	movq 1(%rip), %rax
	movq 1+msg(%rip), %rax
	movq 270(%rip), %rax
	movq 270+msg(%rip), %rax
	movq 0(%rax), %rsi
	movq 0(%rip), %rax
	movq 0(%rip), %rsi
	movq 0(%rbp), %rsi
	movq 0(%rsp), %rsp
	movq 0(%rax), %rsp
	movq 0(%rdi), %rsp
	movq 0(%rbp), %rbp
	movq 0(%rbp), %rsp
	movq %rsi, 1+msg+0-0+0(%rip)
	movq %rsi, 200+msg(%rsp)
	movq %rcx, 2(%rsp)
	movq %rsi, 1(%rax)
	movq %rsi, 270+1(%rax)
	movq %rsi, 1+msg(%rax)
	movq %rsi, 1+msg(%rsp)
	movq %rsi, 300(%rax)
	movq %rax, msg(%rip)
	movq %rsi, 1(%rip)
	movq %rsi, 1+msg(%rbp)
	movq %rsi, 1(%rbp)
	movq %rsi, 300(%rbp)
	movq %rsp, 1+msg+0+1(%rsp)
	movq %rsp, 1+msg(%rsp)
	movq %rsp, 1(%rsp)
	movq %rsp, 0(%rsp)
	movq %rsp, 300(%rsp)
	movq %rax, 1(%rip)
	movq %rax, 1+msg(%rip)
	movq %rax, 270(%rip)
	movq %rax, 270+msg(%rip)
	movq %rsi, 0(%rax)
	movq %rax, 0(%rip)
	movq %rsi, 0(%rip)
	movq %rsi, 0(%rbp)
	movq %rsp, 0(%rsp)
	movq %rsp, 0(%rax)
	movq %rsp, 0(%rdi)
	movq %rbp, 0(%rbp)
	movq %rsp, 0(%rbp)
	movq %rax, 1(%rbp)
	movq %rax, msg(%rbp)
	movq %rax, msg+4(%rsp)
	movq %rax, msg+4(%rip)
	movq %rax, 1 + 270(%rbp)
	movq %rax, msg + 270(%rbp)
	movq %rax, msg+4 + 270(%rsp)
	movq %rax, msg+4 + 270(%rip)
	movq %rax, %rax
	movq %rsp, %rsp
	movq %rsp, %rdi
	movq %rbp, %rdi
    addq %rax, %rax
	addq %rsp, %rsp
	addq %rsp, %rdi
	addq %rbp, %rdi
    subq %rax, %rax
	subq %rsp, %rsp
	subq %rsp, %rdi
	subq %rbp, %rdi
	subq 0(%rax), %rsi
	subq 0(%rip), %rax
	subq 0(%rip), %rsi
	subq 0(%rbp), %rsi
	subq 0(%rsp), %rsp
	subq 0(%rax), %rsp
	subq 0(%rdi), %rsp
	subq 0(%rbp), %rbp
	subq 0(%rbp), %rsp
	subq %rax, %rcx
	subq $30, %rdi
	subq 1+msg+0-0+0(%rip), %rsi
	subq 200+msg(%rsp), %rsi
	subq 2(%rsp), %rcx
	subq 1(%rax), %rsi
	subq 270+1(%rax), %rsi
	subq 1+msg(%rax), %rsi
	subq 1+msg(%rsp), %rsi
	subq 300(%rax), %rsi
	subq msg(%rip), %rax
	subq 1(%rip), %rsi
	subq 1+msg(%rbp), %rsi
	subq 1(%rbp), %rsi
	subq 300(%rbp), %rsi
	subq 1+msg+0+1(%rsp), %rsp
	subq 1+msg(%rsp), %rsp
	subq 1(%rsp), %rsp
	subq 0(%rsp), %rsp
	subq 300(%rsp), %rsp
	subq 1(%rip), %rax
	subq 1+msg(%rip), %rax
	subq 270(%rip), %rax
	subq 270+msg(%rip), %rax
	subq %rsi, 1+msg+0-0+0(%rip)
	subq %rsi, 200+msg(%rsp)
	subq %rcx, 2(%rsp)
	subq %rsi, 1(%rax)
	subq %rsi, 270+1(%rax)
	subq %rsi, 1+msg(%rax)
	subq %rsi, 1+msg(%rsp)
	subq %rsi, 300(%rax)
	subq %rax, msg(%rip)
	subq %rsi, 1(%rip)
	subq %rsi, 1+msg(%rbp)
	subq %rsi, 1(%rbp)
	subq %rsi, 300(%rbp)
	subq %rsp, 1+msg+0+1(%rsp)
	subq %rsp, 1+msg(%rsp)
	subq %rsp, 1(%rsp)
	subq %rsp, 0(%rsp)
	subq %rsp, 300(%rsp)
	subq %rax, 1(%rip)
	subq %rax, 1+msg(%rip)
	subq %rax, 270(%rip)
	subq %rax, 270+msg(%rip)
	subq %rsi, 0(%rax)
	subq %rax, 0(%rip)
	subq %rsi, 0(%rip)
	subq %rsi, 0(%rbp)
	subq %rsp, 0(%rsp)
	subq %rsp, 0(%rax)
	subq %rsp, 0(%rdi)
	subq %rbp, 0(%rbp)



